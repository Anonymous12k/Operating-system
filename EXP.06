6. Construct a C program to simulate Round Robin scheduling algorithm with C.
-------------------------------Source code---------------------------------------
#include <stdio.h>
struct Process {
    int pid; 
    int burstTime; 
    int remainingTime; 
};

int main() {
    int n; 
    int quantum; 

    printf("Enter the number of processes: ");
    scanf("%d", &n);

    printf("Enter the time quantum: ");
    scanf("%d", &quantum);

    struct Process processes[n];

    for (int i = 0; i < n; i++) {
        processes[i].pid = i + 1;
        printf("Enter burst time for Process %d: ", processes[i].pid);
        scanf("%d", &processes[i].burstTime);
        processes[i].remainingTime = processes[i].burstTime;
    }

    int currentTime = 0;
    int totalTurnaroundTime = 0;
    int totalWaitingTime = 0;


    while (1) {
        int done = 1; 

        for (int i = 0; i < n; i++) {
            if (processes[i].remainingTime > 0) {
                done = 0; 
                if (processes[i].remainingTime <= quantum) {
                    // Process completes within time quantum
                    currentTime += processes[i].remainingTime;
                    totalTurnaroundTime += currentTime;
                    totalWaitingTime += currentTime - processes[i].burstTime;
                    processes[i].remainingTime = 0;
                } else {
                    // Time quantum expires
                    currentTime += quantum;
                    processes[i].remainingTime -= quantum;
                }
            }
        }

        if (done)
            break; 
    }

    ---------------------------------------------------------------// Calculate and display average turnaround time and waiting time
    float avgTurnaroundTime = (float)totalTurnaroundTime / n;
    float avgWaitingTime = (float)totalWaitingTime / n;
    printf("Average Turnaround Time: %.2f\n", avgTurnaroundTime);
    printf("Average Waiting Time: %.2f\n", avgWaitingTime);

    return 0;
}


------------------------------------Output------------------------------------------------------------
Enter the number of processes: 2
Enter the time quantum: 5
Enter burst time for Process 1: 15
Enter burst time for Process 2: 12
Average Turnaround Time: 26.00
Average Waiting Time: 12.50

------------------------------------------------------------
